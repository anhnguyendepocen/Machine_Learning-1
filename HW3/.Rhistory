book_ratings <- read.csv("./BX-Book-Ratings.csv",header = TRUE,sep=";",stringsAsFactors = TRUE)
View(book_ratings)
table(book_ratings)
order(book_ratings)
sort_user <- sort(table(book_ratings), decreasing = TRUE)
sort_user <- sort(table(book_ratings$User.ID), decreasing = TRUE)
sort_user[1:100]
View(book_ratings)
book_ratings[493813]
book_ratings[,493813]
book_ratings[493813,]
book_ratings[493814,]
book_ratings <- read.csv("./BX-Book-Ratings.csv", header = TRUE,sep=";", stringsAsFactors = TRUE, skip = 0)
book_ratings <- read.csv("./BX-Book-Ratings.csv", header = TRUE,sep=";", stringsAsFactors = TRUE, skip = 1)
BX.Book.Ratings <- read.csv("D:/Texts/Spring 2017/Machine Learning/Rmd files/HW3/BX-Book-Ratings.csv", sep=";")
View(BX.Book.Ratings)
View(BX.Book.Ratings)
book_ratings <- read.csv("./BX-Book-Ratings 2.csv", header = TRUE)
sort_user <- sort(table(book_ratings$User.ID), decreasing = TRUE)
sort_user[1:100]
book_ratings_top100 <- book_ratings[book_ratings$User.ID %in% sort_user[1:100]]
book_ratings_top100 <- book_ratings[book_ratings$User.ID %in% sort_user[1:100],]
View(book_ratings_top100)
top100<- sort_user[1:100]
top100
top100 <- sort_user[1:100,1]
top100 <- dimnames(sort_user[1:100])
top100
book_ratings_top100 <- book_ratings[book_ratings$User.ID %in% top100,]
View(book_ratings)
book_ratings_top100 <- book_ratings[book_ratings$User.ID %in% top100,]
book_ratings_top100 <- book_ratings[book_ratings$User.ID %in% as.numeric(top100),]
type(top100[1])
top100[1]
book_ratings_top100 <- book_ratings[book_ratings$User.ID %in% top100[1],]
str(top[1])
class(top100[1])
class(top100[1][1])
top100
top100[[1]]
class(top100[[1]])
book_ratings_top100 <- book_ratings[book_ratings$User.ID %in% top100[[1]],]
View(book_ratings_top100)
set.seed(1)
book.train.id <- sample(1:nrow(book_ratings_top100), 100000)
book.train <- book_ratings_top100[book.train.id, ]
book.test <- book_ratings_top100[-book.train.id, ]
View(book.test)
View(book.train)
library(reshape2)
acast(book.train, User.ID ~ ISBN)
train.matrix <- acast(book.train, User.ID ~ ISBN)
train.matrix <- xtabs(Book.Rating ~ User.ID + ISBN, book.train)
train.matrix <- acast(book.train, User.ID ~ ISBN, value.var = Book.Rating)
train.matrix <- acast(book.train, User.ID ~ ISBN, value.var = "Book.Rating"")
train.matrix <- acast(book.train, User.ID ~ ISBN, value.var = "Book.Rating")
top100
train.matrix
view(train.matrix)
train.matrix[[2]]
train.matrix[[1]]
train.matrix[1]
library(reshape2)
train.matrix <- acast(book.train, User.ID ~ ISBN, value.var = "Book.Rating")
book_ratings <- read.csv("./BX-Book-Ratings 2.csv", header = TRUE)
sort_user <- sort(table(book_ratings$User.ID), decreasing = TRUE)
top100 <- dimnames(sort_user[1:100])
book_ratings_top100 <- book_ratings[book_ratings$User.ID %in% top100[[1]],]
set.seed(1)
book.train.id <- sample(1:nrow(book_ratings_top100), 100000)
book.train <- book_ratings_top100[book.train.id, ]
book.test <- book_ratings_top100[-book.train.id, ]
library(reshape2)
train.matrix <- acast(book.train, User.ID ~ ISBN, value.var = "Book.Rating")
train.matrix[1][1]
train.matrix[1][2]
train.matrix[1][6]
train.matrix <- acast(book.train, as.factor(User.ID) ~ as.factor(ISBN), value.var = "Book.Rating")
train.matrix <- acast(book.train, toString(User.ID) ~ toString(ISBN), value.var = "Book.Rating")
View(book_ratings_top100)
View(book.train)
train.matrix[56447][059042761X]
train.matrix[98391][0312324669]
train.matrix <- xtabs(Book.Rating ~ User.ID + ISBN, book.train)
train.matrix <- xtabs(Book.Rating ~ toString(User.ID) + toString(ISBN), book.train)
train.matrix <- xtabs(Book.Rating ~ as.factor(User.ID) + as.factor(ISBN), book.train)
dim(book_ratings_top100)
daply(book.train, .(User.ID, ISBN), function(User.ID) User.ID$Book.Rating)
library(plyr)
daply(book.train, .(User.ID, ISBN), function(User.ID) User.ID$Book.Rating)
train.matrix <- daply(book.train, .(User.ID, ISBN), function(User.ID) User.ID$Book.Rating)
spread(train.matrix, ISBN, Book.Rating)
library(tidyr)
spread(train.matrix, ISBN, Book.Rating)
install.packages(tidyr)
install.packages("tidyr")
library(tidyr)
spread(train.matrix, ISBN, Book.Rating)
spread(book.train, ISBN, Book.Rating)
train.matrix <- spread(book.train, ISBN, Book.Rating)
View(train.matrix)
test.matrix <- spread(book.test, ISBN, Book.Rating)
View(test.matrix)
View(book.train)
View(book.train)
book_ratings <- read.csv("./BX-Book-Ratings 2.csv", header = TRUE)
sort_user <- sort(table(book_ratings$User.ID), decreasing = TRUE)
top100 <- dimnames(sort_user[1:100])
book_ratings_top100 <- book_ratings[book_ratings$User.ID %in% top100[[1]],]
dim(book_ratings_top100)
set.seed(1)
book.train.id <- sample(1:nrow(book_ratings_top100), 100000)
book.train <- book_ratings_top100[book.train.id, ]
book.test <- book_ratings_top100[-book.train.id, ]
book_ratings <- read.csv("./BX-Book-Ratings 2.csv", header = TRUE, sep = ";")
sort_user <- sort(table(book_ratings$User.ID), decreasing = TRUE)
top100 <- dimnames(sort_user[1:100])
book_ratings_top100 <- book_ratings[book_ratings$User.ID %in% top100[[1]],]
dim(book_ratings_top100)
set.seed(1)
book.train.id <- sample(1:nrow(book_ratings_top100), 100000)
book.train <- book_ratings_top100[book.train.id, ]
book.test <- book_ratings_top100[-book.train.id, ]
View(book.train)
library(tidyr)
train.matrix <- spread(book.train, ISBN, Book.Rating)
test.matrix <- spread(book.test, ISBN, Book.Rating)
View(train.matrix)
View(train.matrix)
View(book.train)
top100
View(book_ratings_top100)
row_means <- rowMeans(train.matrix, na.rm = TRUE)
row_means <- rowMeans(train.matrix[,-1], na.rm = TRUE)
train.matrix_pred1 <- train.matrix
for (i in 1:nrow(train.matrix))
{
for (j in 1:ncol(train.matrix))
{
if (is.na(train.matrix[i,j]))
{
train.matrix_pred1[i,j] <- rowMeans[j]
}
}
}
class(row_means)
class(row_means[1])
row_means[1]
for (i in 1:nrow(train.matrix))
{
for (j in 1:ncol(train.matrix))
{
if (is.na(train.matrix[i,j]))
{
train.matrix_pred1[i,j] <- row_means[j]
cl   }
}
}
for (i in 1:nrow(train.matrix))
{
for (j in 1:ncol(train.matrix))
{
if (is.na(train.matrix[i,j]))
{
train.matrix_pred1[i,j] <- row_means[j]
}
}
}
for (i in 1:10)
{
for (j in 1:ncol(train.matrix))
{
if (is.na(train.matrix[i,j]))
{
train.matrix_pred1[i,j] <- row_means[j]
}
}
}
for (i in 1:nrow(train.matrix))
{
train.matrix_pred1[i, is.na(train.matrix[i,-1])] <- row_means[i]
}
book_ratings <- read.csv("./BX-Book-Ratings 2.csv", header = TRUE, sep = ";")
sort_user <- sort(table(book_ratings$User.ID), decreasing = TRUE)
top100 <- dimnames(sort_user[1:100])
book_ratings_top100 <- book_ratings[book_ratings$User.ID %in% top100[[1]],]
dim(book_ratings_top100)
set.seed(1)
book.train.id <- sample(1:nrow(book_ratings_top100), 100000)
book.train <- book_ratings_top100[book.train.id, ]
book.test <- book_ratings_top100[-book.train.id, ]
```
```{r Q3, echo=TRUE}
# library(reshape2)
library(tidyr)
train.matrix <- spread(book.train, ISBN, Book.Rating)
test.matrix <- spread(book.test, ISBN, Book.Rating)
row_means <- rowMeans(train.matrix[,-1], na.rm = TRUE)
train.matrix_pred1 <- train.matrix
for (i in 1:nrow(train.matrix))
{
train.matrix_pred1[i, is.na(train.matrix[i,-1])] <- row_means[i]
}
View(test.matrix)
View(train.matrix_pred1)
View(train.matrix)
View(test.matrix)
SVD_pred1 <- svd(train.matrix_pred1)
for (i in 1:nrow(train.matrix))
{
train.matrix_pred1[i, is.na(train.matrix[i,-1])] <- row_means[i]
}
SVD_pred1 <- svd(train.matrix_pred1)
for (i in 1:nrow(train.matrix))
{
train.matrix_pred1[i, is.na(train.matrix[i,])] <- row_means[i]
}
SVD_pred1 <- svd(train.matrix_pred1)
View(train.matrix_pred1)
train.matrix_pred2 <- round(SVD_pred1$u[, 1:10] %*% diag(SVD_pred1$d)[1:10, 1:10] %*% t(SVD_pred1$v [, 1:10]), 2)
View(train.matrix_pred2)
View(train.matrix_pred1)
SVD_pred1 <- svd(train.matrix_pred1[,-1])
train.matrix_pred2 <- round(SVD_pred1$u[, 1:10] %*% diag(SVD_pred1$d)[1:10, 1:10] %*% t(SVD_pred1$v [, 1:10]), 2)
View(train.matrix_pred2)
train.matrix_pred2 <- round(SVD_pred1$u[, 1:100] %*% diag(SVD_pred1$d)[1:100, 1:100] %*% t(SVD_pred1$v [, 1:100]), 2)
View(train.matrix_pred2)
dim(book_ratings_top100)
unique(book_ratings_top100)
dim(unique(book_ratings_top100$ISBN))
unique(book_ratings_top100$ISBN)
unique_book <- unique(book_ratings_top100$ISBN)
dim(unique_book)
dim(as.vector(unique_book))
length(unique_book)
common_ISBN <- intersect(train.matrix,test.matrix)
View(common_ISBN)
x <- as.matrix(c(1,2,8,7),nrow=2)
y <- as.matrix(c(3,4,5,6),nrow=2)
intersect(x,y)
z <- intersect(x,y)
x <- as.data.frame(c(1,2,8,7),nrow=2,row.names = c(p,q))
y <- as.data.frame(c(3,4,5,6),nrow=2,row.names = c(p,q))
z <- intersect(x,y)
x <- as.data.frame(c(1,2,8,7),nrow=2,row.names = c("p","q"))
y <- as.data.frame(c(3,4,5,6),nrow=2,row.names = c("p","q"))
z <- intersect(x,y)
common_ISBN <- intersect(colnames(train.matrix),colnames(test.matrix))
common_ISBN
colnames(train.matrix_pred2) <- colnames(train.matrix_pred1[,-1])
common_train_matrix <- train.matrix_pred2[,common_ISBN]
View(train.matrix_pred2)
common_train_matrix <- train.matrix_pred2[,common_ISBN]
View(train.matrix_pred2)
length(common_ISBN)
dim(train.matrix_pred2)
common_test_matrix <- test.matrix[,common_ISBN]
View(common_test_matrix)
common_train_matrix <- train.matrix_pred1[,common_ISBN]
common_test_matrix <- test.matrix[,common_ISBN]
class(train.matrix_pred2)
class(train.matrix_pred1)
train.matrix_pred2 <- as.data.frame(train.matrix_pred2)
common_ISBN <- intersect(colnames(train.matrix),colnames(test.matrix))
common_train_matrix <- train.matrix_pred1[,common_ISBN]
common_test_matrix <- test.matrix[,common_ISBN]
common_train_matrix <- train.matrix_pred2[,common_ISBN]
common_test_matrix <- test.matrix[,common_ISBN]
View(train.matrix_pred2)
common_train_matrix <- train.matrix_pred2[,common_ISBN]
View(train.matrix_pred1)
train.matrix_pred2 <- round(SVD_pred1$u[, 1:100] %*% diag(SVD_pred1$d)[1:100, 1:100] %*% t(SVD_pred1$v [, 1:100]), 2)
train.matrix_pred2 <- as.data.frame(train.matrix_pred2)
colnames(train.matrix_pred2) <- colnames(train.matrix_pred1[,-1])
common_train_matrix <- train.matrix_pred2[,common_ISBN]
common_test_matrix <- test.matrix[,common_ISBN]
View(common_train_matrix)
sum((common_test_matrix - common_train_matrix)^2)
sum((common_test_matrix - common_train_matrix)^2, na.rm = TRUE)
diff_matrix <- common_test_matrix - common_train_matrix
mse_1 <- sum(diff_matrix^2, na.rm = TRUE)/length(which(!is.na(diff_matrix)))
mse_1
View(diff_matrix)
View(common_test_matrix)
length(which(!is.na(diff_matrix))
length(which(!is.na(diff_matrix))
length(which(!is.na(diff_matrix)))
sum(diff_matrix^2, na.rm = TRUE)
View(diff_matrix)
train.matrix_pred1 <- train.matrix
train.matrix_pred1[, is.na(train.matrix[i,])] <- row_means
5-NA
5+NA
View(diff_matrix)
common_ISBN <- intersect(colnames(train.matrix[,-1]),colnames(test.matrix[,-1]))
common_train_matrix <- train.matrix_pred2[,common_ISBN]
common_test_matrix <- test.matrix[,common_ISBN]
diff_matrix <- common_test_matrix - common_train_matrix
mse_1 <- sum(diff_matrix^2, na.rm = TRUE)/length(which(!is.na(diff_matrix)))
mse_1
train.matrix_pred3 <- train.matrix
which(is.na(train.matrix_pred3))
x
x <- matrix(c(1,2,NA,3,4,NA),nrows = 2)
x <- as.matrix(c(1,2,NA,3,4,NA),nrows = 2)
x
x <- as.matrix(c(1,2,NA,3,4,NA),nrow(2))
x
which(!is.na(diff_matrix))
diff_matrix[which(!is.na(diff_matrix))]
diff_matrix[which(,!is.na(diff_matrix))]
diff_matrix[,which(!is.na(diff_matrix))]
View(diff_matrix)
train.matrix_pred3 <- train.matrix[,-1]
for (i in 1:nrow(train.matrix))
{
train.matrix_pred3[i, is.na(train.matrix[i,])] <- train.matrix_pred2[i, is.na(train.matrix[i,])]
}
for (i in 1:nrow(train.matrix))
{
for (j in 2:ncol(train.matrix))
{
if (is.na(train.matrix_pred3[i, j]))
{
train.matrix_pred3[i, j] <- train.matrix_pred2[i, j]
}
}
}
[,-1]
train.matrix_pred3 <- train.matrix[,-1]
for (i in 1:nrow(train.matrix))
{
for (j in 2:ncol(train.matrix))
{
if (is.na(train.matrix_pred3[i, j]))
{
train.matrix_pred3[i, j] <- train.matrix_pred2[i, j]
}
}
}
train.matrix_pred3[is.na(train.matrix_pred3)] <- train.matrix_pred2[is.na(train.matrix_pred3)]
SVD_pred3 <- svd(train.matrix_pred3)
train.matrix_pred4 <- round(SVD_pred3$u[, 1:100] %*% diag(SVD_pred3$d)[1:100, 1:100] %*% t(SVD_pred3$v [, 1:100]), 2)
common_train_matrix_2 <- train.matrix_pred4[,common_ISBN]
diff_matrix_2 <- common_test_matrix - common_train_matrix_2
mse_2 <- sum(diff_matrix_2^2, na.rm = TRUE)/length(which(!is.na(diff_matrix_2)))
mse_2
train.matrix_pred4 <- as.data.frame(train.matrix_pred4)
colnames(train.matrix_pred4) <- colnames(train.matrix_pred2)
common_train_matrix_2 <- train.matrix_pred4[,common_ISBN]
diff_matrix_2 <- common_test_matrix - common_train_matrix_2
mse_2 <- sum(diff_matrix_2^2, na.rm = TRUE)/length(which(!is.na(diff_matrix_2)))
mse_2
train.matrix_pred3[is.na(train.matrix_pred1)] <- train.matrix_pred2[is.na(train.matrix_pred1)]
View(train.matrix_pred1)
train.matrix_pred1 <- train.matrix[,-1]
train.matrix_pred3[is.na(train.matrix_pred1)] <- train.matrix_pred2[is.na(train.matrix_pred1)]
SVD_pred3 <- svd(train.matrix_pred3)
train.matrix_pred4 <- round(SVD_pred3$u[, 1:100] %*% diag(SVD_pred3$d)[1:100, 1:100] %*% t(SVD_pred3$v [, 1:100]), 2)
colnames(train.matrix_pred4) <- colnames(train.matrix_pred2)
train.matrix_pred4 <- as.data.frame(train.matrix_pred4)
common_train_matrix_2 <- train.matrix_pred4[,common_ISBN]
diff_matrix_2 <- common_test_matrix - common_train_matrix_2
mse_2 <- sum(diff_matrix_2^2, na.rm = TRUE)/length(which(!is.na(diff_matrix_2)))
mse_2
View(train.matrix_pred3)
SVD_pred3 <- svd(train.matrix_pred3)
train.matrix_pred4 <- round(SVD_pred3$u[, 1:100] %*% diag(SVD_pred3$d)[1:100, 1:100] %*% t(SVD_pred3$v [, 1:100]))
train.matrix_pred4 <- as.data.frame(train.matrix_pred4)
colnames(train.matrix_pred4) <- colnames(train.matrix_pred2)
common_train_matrix_2 <- train.matrix_pred4[,common_ISBN]
diff_matrix_2 <- common_test_matrix - common_train_matrix_2
mse_2 <- sum(diff_matrix_2^2, na.rm = TRUE)/length(which(!is.na(diff_matrix_2)))
mse_2
train.matrix_pred2 <- round(SVD_pred1$u[, 1:100] %*% diag(SVD_pred1$d)[1:100, 1:100] %*% t(SVD_pred1$v [, 1:100]))
train.matrix_pred2 <- as.data.frame(train.matrix_pred2)
colnames(train.matrix_pred2) <- colnames(train.matrix_pred1[,-1])
common_ISBN <- intersect(colnames(train.matrix[,-1]),colnames(test.matrix[,-1]))
common_train_matrix <- train.matrix_pred2[,common_ISBN]
common_test_matrix <- test.matrix[,common_ISBN]
diff_matrix <- common_test_matrix - common_train_matrix
mse_1 <- sum(diff_matrix^2, na.rm = TRUE)/length(which(!is.na(diff_matrix)))
mse_1
# Read in data
book_ratings <- read.csv("./BX-Book-Ratings 2.csv", header = TRUE, sep = ";")
# Find top 100 active users
sort_user <- sort(table(book_ratings$User.ID), decreasing = TRUE)
top100 <- dimnames(sort_user[1:100])
book_ratings_top100 <- book_ratings[book_ratings$User.ID %in% top100[[1]],]
# Count unique books
unique_book <- unique(book_ratings_top100$ISBN)
length(unique_book)
# Count unique book ratings
dim(book_ratings_top100)
set.seed(1)
book.train.id <- sample(1:nrow(book_ratings_top100), 100000)
book.train <- book_ratings_top100[book.train.id, ]
book.test <- book_ratings_top100[-book.train.id, ]
credit <- read.csv("./Spring 2017/Machine Learning/Project/default of credit card clients.csv",header = TRUE)
